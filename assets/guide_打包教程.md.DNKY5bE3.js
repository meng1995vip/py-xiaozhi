import{_ as i,c as a,o as n,ae as l}from"./chunks/framework.BGWP4WZ_.js";const g=JSON.parse('{"title":"项目打包教程","description":"","frontmatter":{},"headers":[],"relativePath":"guide/打包教程.md","filePath":"guide/打包教程.md"}'),t={name:"guide/打包教程.md"};function h(p,s,e,k,d,o){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="项目打包教程" tabindex="-1">项目打包教程 <a class="header-anchor" href="#项目打包教程" aria-label="Permalink to &quot;项目打包教程&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>UnifyPy是一个强大的自动化解决方案，能将Python项目打包成跨平台的独立可执行文件和安装程序。小智客户端已配置了相应的打包配置文件，本教程将指导您如何使用UnifyPy进行打包。</p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><h3 id="_1-安装py-xiaozhi项目依赖" tabindex="-1">1. 安装py-xiaozhi项目依赖 <a class="header-anchor" href="#_1-安装py-xiaozhi项目依赖" aria-label="Permalink to &quot;1. 安装py-xiaozhi项目依赖&quot;">​</a></h3><p>首先，确保您已安装py-xiaozhi项目的所有依赖：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements_mac.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><h3 id="_2-克隆unifypy仓库" tabindex="-1">2. 克隆UnifyPy仓库 <a class="header-anchor" href="#_2-克隆unifypy仓库" aria-label="Permalink to &quot;2. 克隆UnifyPy仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/huangjunsen0406/UnifyPy.git</span></span></code></pre></div><h3 id="_3-安装平台特定工具" tabindex="-1">3. 安装平台特定工具 <a class="header-anchor" href="#_3-安装平台特定工具" aria-label="Permalink to &quot;3. 安装平台特定工具&quot;">​</a></h3><h4 id="windows平台" tabindex="-1">Windows平台 <a class="header-anchor" href="#windows平台" aria-label="Permalink to &quot;Windows平台&quot;">​</a></h4><ul><li>安装<a href="https://jrsoftware.org/isdl.php" target="_blank" rel="noreferrer">Inno Setup</a>（用于创建安装程序）</li><li>安装后，在build.json中配置Inno Setup路径，或设置环境变量INNO_SETUP_PATH</li><li>把UnifyPy下的ChineseSimplified.isl复制到inno setup安装目录下language里 （windows）</li></ul><h4 id="macos平台" tabindex="-1">macOS平台 <a class="header-anchor" href="#macos平台" aria-label="Permalink to &quot;macOS平台&quot;">​</a></h4><ul><li>安装create-dmg（用于创建DMG镜像）：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-dmg</span></span></code></pre></div></li></ul><h4 id="linux平台" tabindex="-1">Linux平台 <a class="header-anchor" href="#linux平台" aria-label="Permalink to &quot;Linux平台&quot;">​</a></h4><p>根据需要的打包格式，安装相应的工具：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DEB格式(Debian/Ubuntu)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># RPM格式(Fedora/CentOS)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpm-build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># AppImage格式(通用Linux)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> appimagetool-x86_64.AppImage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> appimagetool-x86_64.AppImage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/appimagetool</span></span></code></pre></div><h2 id="打包配置详解" tabindex="-1">打包配置详解 <a class="header-anchor" href="#打包配置详解" aria-label="Permalink to &quot;打包配置详解&quot;">​</a></h2><p>小智客户端已经提供了预配置的<code>build.json</code>文件，以下是各配置项的详细说明：</p><h3 id="基本配置" tabindex="-1">基本配置 <a class="header-anchor" href="#基本配置" aria-label="Permalink to &quot;基本配置&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xiaozhi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用程序名称，将用于可执行文件和安装程序名称</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用程序版本号</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;publisher&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Junsen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发布者名称</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;entry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 程序入口文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;assets/xiaozhi_icon.ico&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用图标路径</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;hooks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hooks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// PyInstaller钩子目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;onefile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否生成单文件模式的可执行文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // PyInstaller通用参数，适用于所有平台</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;additional_pyinstaller_args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--add-data assets;assets --add-data libs;libs --add-data src;src --add-data models;models --hidden-import=PyQt5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Inno Setup路径（Windows平台需要）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;inno_setup_path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;E:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">application</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Inno Setup 6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ISCC.exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 其他配置...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p><strong>注意</strong>：JSON文件不支持注释，上述代码中的注释仅用于说明，实际配置文件中不应包含注释。</p></blockquote><h3 id="平台特定配置" tabindex="-1">平台特定配置 <a class="header-anchor" href="#平台特定配置" aria-label="Permalink to &quot;平台特定配置&quot;">​</a></h3><h4 id="windows平台配置" tabindex="-1">Windows平台配置 <a class="header-anchor" href="#windows平台配置" aria-label="Permalink to &quot;Windows平台配置&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;format&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出格式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;additional_pyinstaller_args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--add-data assets;assets --add-data libs;libs --add-data src;src --add-data models;models --hidden-import=PyQt5 --noconsole&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;desktop_entry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否创建桌面快捷方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;installer_options&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;languages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ChineseSimplified&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;English&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 安装程序支持的语言</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;license_file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LICENSE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 许可证文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;readme_file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;README.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自述文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;create_desktop_icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否创建桌面图标</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;allow_run_after_install&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // 安装后是否允许立即运行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="linux平台配置" tabindex="-1">Linux平台配置 <a class="header-anchor" href="#linux平台配置" aria-label="Permalink to &quot;Linux平台配置&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;linux&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;format&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;deb&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出格式，可选值：deb, rpm, appimage</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;desktop_entry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否创建桌面快捷方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;categories&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Utility;Development;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用程序类别</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;小智Ai客户端&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用描述</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;requires&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libc6,libgtk-3-0,libx11-6,libopenblas-dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 依赖项</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;additional_pyinstaller_args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--add-data assets:assets --add-data libs:libs --add-data src:src --add-data models:models --hidden-import=PyQt5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="macos平台配置" tabindex="-1">macOS平台配置 <a class="header-anchor" href="#macos平台配置" aria-label="Permalink to &quot;macOS平台配置&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;macos&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;format&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出格式，可选值：app, dmg</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;additional_pyinstaller_args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--add-data assets:assets --add-data libs:libs --add-data src:src --add-data models:models --hidden-import=PyQt5 --windowed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;app_bundle_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;XiaoZhi.app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用包名称</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;bundle_identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.junsen.xiaozhi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用标识符</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;sign_bundle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否签名应用包</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;create_dmg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否创建DMG镜像</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;installer_options&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;license_file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LICENSE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 许可证文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;readme_file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;README.md&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 自述文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="其他重要配置项" tabindex="-1">其他重要配置项 <a class="header-anchor" href="#其他重要配置项" aria-label="Permalink to &quot;其他重要配置项&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build_installer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 是否构建安装程序，设为false只生成可执行文件</span></span></code></pre></div><h3 id="自定义安装程序模板" tabindex="-1">自定义安装程序模板 <a class="header-anchor" href="#自定义安装程序模板" aria-label="Permalink to &quot;自定义安装程序模板&quot;">​</a></h3><p>当打包Windows安装程序时，UnifyPy使用<code>setup.iss.template</code>文件作为Inno Setup的脚本模板。需要注意的是，模板中的AppId需要更换为自己的唯一标识符：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[Setup]</span></span>
<span class="line"><span>; 应用程序信息</span></span>
<span class="line"><span>AppId={{05DBB87C-AE34-4F2F-AEC5-3CD2AFE9DC90}}  ; 需要替换为你自己生成的GUID</span></span></code></pre></div><blockquote><p><strong>重要</strong>：请勿直接使用示例中的AppId，这可能导致与其他应用程序冲突。您可以使用在线GUID生成工具（如<a href="https://www.guidgenerator.com/" target="_blank" rel="noreferrer">Online GUID Generator</a>）来生成自己的唯一标识符。</p></blockquote><h2 id="执行打包" tabindex="-1">执行打包 <a class="header-anchor" href="#执行打包" aria-label="Permalink to &quot;执行打包&quot;">​</a></h2><h3 id="基本打包命令" tabindex="-1">基本打包命令 <a class="header-anchor" href="#基本打包命令" aria-label="Permalink to &quot;基本打包命令&quot;">​</a></h3><ul><li>建议UnifyPy放在和py-xiaozhi项目同级目录下, 直接 <code>python ../UnifyPy/main.py. --config build.json</code> 即可</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导航到UnifyPy目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 到当前py-xiaozhi项目目录下</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行打包命令</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># UnifyPy_路径/main.py 是UnifyPy的项目路径</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># . 表示当前项目目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --config build.json 表示使用当前目录下的build.json配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UnifyPy_路径/main.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.json</span></span></code></pre></div><h3 id="针对不同平台的打包命令" tabindex="-1">针对不同平台的打包命令 <a class="header-anchor" href="#针对不同平台的打包命令" aria-label="Permalink to &quot;针对不同平台的打包命令&quot;">​</a></h3><h4 id="windows平台-1" tabindex="-1">Windows平台 <a class="header-anchor" href="#windows平台-1" aria-label="Permalink to &quot;Windows平台&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\路</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">径</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\到\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nifyPy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ain.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.json</span></span></code></pre></div><h4 id="macos平台-1" tabindex="-1">macOS平台 <a class="header-anchor" href="#macos平台-1" aria-label="Permalink to &quot;macOS平台&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /路径/到/UnifyPy/main.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.json</span></span></code></pre></div><h4 id="linux平台-1" tabindex="-1">Linux平台 <a class="header-anchor" href="#linux平台-1" aria-label="Permalink to &quot;Linux平台&quot;">​</a></h4><p>Linux平台下打包有两种主要格式：DEB和AppImage。根据需要选择其中一种格式。</p><h5 id="deb格式打包-适用于debian-ubuntu系统" tabindex="-1">DEB格式打包（适用于Debian/Ubuntu系统） <a class="header-anchor" href="#deb格式打包-适用于debian-ubuntu系统" aria-label="Permalink to &quot;DEB格式打包（适用于Debian/Ubuntu系统）&quot;">​</a></h5><ol><li><p><strong>准备环境</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新系统并安装必要的依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-setuptools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopenblas-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> liblapack-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gfortran</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> patchelf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoconf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> automake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libtool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libssl-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libatlas-base-dev</span></span></code></pre></div></li><li><p><strong>执行打包</strong></p><p>确保build.json中linux.format设置为&quot;deb&quot;，然后执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /路径/到/UnifyPy/main.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.json</span></span></code></pre></div></li></ol><h5 id="appimage格式打包-适用于通用linux系统" tabindex="-1">AppImage格式打包（适用于通用Linux系统） <a class="header-anchor" href="#appimage格式打包-适用于通用linux系统" aria-label="Permalink to &quot;AppImage格式打包（适用于通用Linux系统）&quot;">​</a></h5><p>AppImage格式需要特别注意NumPy库的编译，以下是完整步骤：</p><ol><li><p><strong>升级pip和基本构建工具</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setuptools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wheel</span></span></code></pre></div></li><li><p><strong>安装必要的系统依赖</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-setuptools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopenblas-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> liblapack-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gfortran</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> patchelf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoconf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> automake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libtool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libssl-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libatlas-base-dev</span></span></code></pre></div></li><li><p><strong>安装Meson和Ninja构建系统</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja-build</span></span></code></pre></div></li><li><p><strong>准备NumPy编译环境</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 卸载现有NumPy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置环境变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BLAS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">openblas</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LAPACK</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">openblas</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NPY_NUM_BUILD_JOBS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用所有CPU核心加速编译</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从源码编译安装NumPy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numpy==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.26.4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-binary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :all:</span></span></code></pre></div></li><li><p><strong>执行打包</strong></p><p>确保build.json中linux.format设置为&quot;appimage&quot;，然后执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /路径/到/UnifyPy/main.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.json</span></span></code></pre></div></li></ol><h2 id="打包输出" tabindex="-1">打包输出 <a class="header-anchor" href="#打包输出" aria-label="Permalink to &quot;打包输出&quot;">​</a></h2><p>成功打包后，将在项目根目录下的<code>dist</code>文件夹中找到打包的应用程序：</p><ul><li><p><strong>Windows</strong>:</p><ul><li>可执行文件(.exe)位于<code>dist/xiaozhi</code>目录</li><li>安装程序位于<code>dist/installer</code>目录，命名为<code>xiaozhi-1.0.0-setup.exe</code></li></ul></li><li><p><strong>macOS</strong>:</p><ul><li>应用程序包(.app)位于<code>dist/xiaozhi</code>目录</li><li>磁盘镜像(.dmg)位于<code>dist/installer</code>目录，命名为<code>xiaozhi-1.0.0.dmg</code></li></ul></li><li><p><strong>Linux</strong>:</p><ul><li>可执行文件位于<code>dist/xiaozhi</code>目录</li><li>安装包位于<code>dist/installer</code>目录： <ul><li>DEB格式：<code>xiaozhi-1.0.0.deb</code></li><li>RPM格式：<code>xiaozhi-1.0.0.rpm</code></li><li>AppImage格式：<code>xiaozhi-1.0.0.AppImage</code></li></ul></li></ul></li></ul><h2 id="高级配置选项" tabindex="-1">高级配置选项 <a class="header-anchor" href="#高级配置选项" aria-label="Permalink to &quot;高级配置选项&quot;">​</a></h2><h3 id="pyinstaller参数" tabindex="-1">PyInstaller参数 <a class="header-anchor" href="#pyinstaller参数" aria-label="Permalink to &quot;PyInstaller参数&quot;">​</a></h3><p>在<code>additional_pyinstaller_args</code>字段中，您可以添加任何PyInstaller支持的参数。以下是一些常用参数：</p><ul><li><code>--noconsole</code>: 不显示控制台窗口（仅适用于图形界面程序）</li><li><code>--windowed</code>: 等同于<code>--noconsole</code></li><li><code>--hidden-import=MODULE</code>: 添加隐式导入的模块</li><li><code>--add-data SRC;DEST</code>: 添加数据文件（Windows平台使用分号分隔）</li><li><code>--add-data SRC:DEST</code>: 添加数据文件（macOS/Linux平台使用冒号分隔）</li><li><code>--icon=FILE.ico</code>: 设置应用程序图标</li></ul><h3 id="处理特殊依赖" tabindex="-1">处理特殊依赖 <a class="header-anchor" href="#处理特殊依赖" aria-label="Permalink to &quot;处理特殊依赖&quot;">​</a></h3><p>某些Python库可能需要特殊处理才能正确打包，可以通过以下方式解决：</p><ol><li><strong>使用钩子文件</strong>：在<code>hooks</code>目录中创建自定义钩子，处理特殊导入情况</li><li><strong>添加隐式导入</strong>：使用<code>--hidden-import</code>参数显式包含隐式导入的模块</li><li><strong>添加数据文件</strong>：使用<code>--add-data</code>参数包含程序运行所需的数据文件</li></ol><h2 id="常见问题及解决方案" tabindex="-1">常见问题及解决方案 <a class="header-anchor" href="#常见问题及解决方案" aria-label="Permalink to &quot;常见问题及解决方案&quot;">​</a></h2><h3 id="windows平台常见问题" tabindex="-1">Windows平台常见问题 <a class="header-anchor" href="#windows平台常见问题" aria-label="Permalink to &quot;Windows平台常见问题&quot;">​</a></h3><ol><li><p><strong>找不到Inno Setup</strong></p><p>解决方案：确保已安装Inno Setup，并在build.json中正确配置路径，或设置环境变量INNO_SETUP_PATH</p></li><li><p><strong>缺少隐式导入的模块</strong></p><p>解决方案：在<code>additional_pyinstaller_args</code>中添加<code>--hidden-import=模块名称</code></p></li><li><p><strong>打包后无法找到资源文件</strong></p><p>解决方案：确保使用相对路径访问资源文件，并使用<code>--add-data</code>参数正确包含资源文件</p></li></ol><h3 id="macos平台常见问题" tabindex="-1">macOS平台常见问题 <a class="header-anchor" href="#macos平台常见问题" aria-label="Permalink to &quot;macOS平台常见问题&quot;">​</a></h3><ol><li><p><strong>创建DMG出错</strong></p><p>解决方案：确保已安装create-dmg工具，并有正确的权限</p></li><li><p><strong>签名问题</strong></p><p>解决方案：如果需要签名，在配置文件中启用<code>sign_bundle</code>并提供有效的开发者身份</p></li><li><p><strong>动态库加载问题</strong></p><p>解决方案：确保代码中正确处理库路径，特别是使用<code>sys._MEIPASS</code>路径</p></li></ol><h3 id="linux平台常见问题" tabindex="-1">Linux平台常见问题 <a class="header-anchor" href="#linux平台常见问题" aria-label="Permalink to &quot;Linux平台常见问题&quot;">​</a></h3><ol><li><p><strong>缺少依赖库</strong></p><p>解决方案：在Linux配置中的<code>requires</code>字段中添加所需的系统依赖</p></li><li><p><strong>打包工具不可用</strong></p><p>解决方案：确保已安装相应格式的打包工具(dpkg-dev, rpmbuild, appimagetool)</p></li><li><p><strong>权限问题</strong></p><p>解决方案：确保脚本有正确的执行权限，对某些资源目录可能需要特别处理</p></li><li><p><strong>NumPy编译失败</strong></p><p>解决方案：确保已安装所有必要的开发库，特别是OpenBLAS、LAPACK和Fortran编译器</p></li><li><p><strong>找不到appimagetool</strong></p><p>解决方案：确保已正确安装并设置appimagetool的可执行权限</p></li></ol><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><ol><li><strong>清理项目</strong>：打包前移除临时文件、缓存和不必要的大型文件</li><li><strong>测试依赖</strong>：确保所有依赖都正确安装并可以导入</li><li><strong>确认文件路径</strong>：检查代码中的文件路径是否使用相对路径或资源路径</li><li><strong>验证配置</strong>：确保build.json中的配置与您的环境一致</li><li><strong>多平台测试</strong>：如果条件允许，在多个平台上测试打包的应用程序</li><li><strong>保存配置</strong>：为不同的打包场景保存不同版本的配置文件，方便复用</li><li><strong>版本管理</strong>：每次发布前更新版本号，保持版本一致性</li></ol>`,70)]))}const F=i(t,[["render",h]]);export{g as __pageData,F as default};
